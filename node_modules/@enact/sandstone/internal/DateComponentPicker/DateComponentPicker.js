"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.DateComponentPickerBase = exports.DateComponentPicker = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _util = require("@enact/core/util");
var _Changeable = _interopRequireDefault(require("@enact/ui/Changeable"));
var _react = require("react");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Picker = _interopRequireWildcard(require("../Picker"));
var _DateComponentPickerModule = _interopRequireDefault(require("./DateComponentPicker.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["aria-valuetext", "accessibilityHint", "children", "label", "max", "noAnimation", "reverse", "value", "voiceLabel", "wrap"];
/**
 * {@link sandstone/internal/DataComponentPicker.DateComponentPickerBase} allows the selection of one
 * part of the date or time using a {@link sandstone/Picker.Picker}.
 *
 * @class DateComponentPickerBase
 * @memberof sandstone/internal/DateComponentPicker
 * @ui
 * @private
 */
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var DateComponentPickerBase = exports.DateComponentPickerBase = (0, _kind["default"])({
  name: 'DateComponentPicker',
  propTypes: /** @lends sandstone/internal/DateComponentPicker.DateComponentPickerBase.prototype */{
    /**
     * Display values representing the `value` to select
     *
     * @type {String[]}
     * @required
     * @public
     */
    children: _propTypes["default"].arrayOf(_propTypes["default"].string).isRequired,
    /**
     * The value of the date component
     *
     * @type {Number}
     * @required
     * @public
     */
    value: _propTypes["default"].number.isRequired,
    /**
     * Sets the hint string read when focusing the picker.
     *
     * @type {String}
     * @public
     */
    accessibilityHint: _propTypes["default"].string,
    /**
     * Overrides the `aria-valuetext` for the picker. By default, `aria-valuetext` is set
     * to the current selected child and accessibilityHint text.
     *
     * @type {String}
     * @memberof sandstone/internal/DateComponentPicker.DateComponentPickerBase.prototype
     * @public
     */
    'aria-valuetext': _propTypes["default"].string,
    /**
     * The label to display below the picker
     *
     * @type {String}
     */
    label: _propTypes["default"].string,
    /**
     * By default, the picker will animate transitions between items if it has a defined
     * `width`. Specifying `noAnimation` will prevent any transition animation for the
     * component.
     *
     * @type {Boolean}
     * @public
     */
    noAnimation: _propTypes["default"].bool,
    /**
     * When `true`, the picker buttons operate in the reverse direction.
     *
     * @type {Boolean}
     * @public
     */
    reverse: _propTypes["default"].bool,
    /*
     * When `true`, allow the picker to continue from the opposite end of the list of options.
     *
     * @type {Boolean}
     * @public
     */
    wrap: _propTypes["default"].bool
  },
  styles: {
    css: _DateComponentPickerModule["default"],
    className: 'dateComponentPicker'
  },
  computed: {
    children: function children(_ref) {
      var _children = _ref.children;
      return (0, _util.mapAndFilterChildren)(_children, function (child) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Picker.PickerItem, {
          marqueeDisabled: true,
          children: child
        });
      });
    },
    max: function max(_ref2) {
      var children = _ref2.children;
      return _react.Children.count(children) - 1;
    },
    voiceLabel: function voiceLabel(_ref3) {
      var children = _ref3.children;
      return JSON.stringify(children);
    }
  },
  render: function render(_ref4) {
    var ariaValuetext = _ref4['aria-valuetext'],
      accessibilityHint = _ref4.accessibilityHint,
      children = _ref4.children,
      label = _ref4.label,
      max = _ref4.max,
      noAnimation = _ref4.noAnimation,
      reverse = _ref4.reverse,
      value = _ref4.value,
      voiceLabel = _ref4.voiceLabel,
      wrap = _ref4.wrap,
      rest = _objectWithoutProperties(_ref4, _excluded);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Picker["default"], _objectSpread(_objectSpread({}, rest), {}, {
      accessibilityHint: accessibilityHint == null ? label : accessibilityHint,
      "aria-valuetext": accessibilityHint == null ? ariaValuetext : null,
      "data-webos-voice-labels-ext": voiceLabel,
      index: value,
      joined: true,
      max: max,
      min: 0,
      noAnimation: noAnimation,
      orientation: "vertical",
      reverse: reverse,
      step: 1,
      value: value,
      wrap: wrap,
      children: children
    }));
  }
});

/**
 * {@link sandstone/internal/DateComponentPickerBase.DateComponentPicker} allows the selection of one part of
 * the date (date, month, or year). It is a stateful component but allows updates by providing a new
 * `value` via props.
 *
 * @class DateComponentPicker
 * @memberof sandstone/internal/DateComponentPicker
 * @mixes ui/Changeable.Changeable
 * @ui
 * @private
 */
var DateComponentPicker = exports.DateComponentPicker = (0, _Changeable["default"])(DateComponentPickerBase);
var _default = exports["default"] = DateComponentPicker;