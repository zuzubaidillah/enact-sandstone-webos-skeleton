"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _keymap = require("@enact/core/keymap");
var _handle = require("@enact/core/handle");
var _SpotlightContainerDecorator = require("@enact/spotlight/SpotlightContainerDecorator");
var _Layout = _interopRequireWildcard(require("@enact/ui/Layout"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Button = _interopRequireDefault(require("../Button"));
var _$L = _interopRequireDefault(require("../internal/$L"));
var _WindowEventable = _interopRequireDefault(require("../internal/WindowEventable"));
var _InputModule = _interopRequireDefault(require("./Input.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children"],
  _excluded2 = ["disabled", "onAdd", "onRemove"];
/*
 * A keypad used to display a sequence of numbers and buttons, like a keyboard.
 */
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _keymap.add)('number', [48, 49, 50, 51, 52, 53, 54, 55, 56, 57]); // Establish all number keys as 'number' keyword.
(0, _keymap.add)('backspace', 8);
var KEY_LIST = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'backspace'];

/*
 * A key used inside a Keypad Layout component.
 */
var Key = (0, _kind["default"])({
  name: 'Key',
  propTypes: {
    disabled: _propTypes["default"].bool,
    // Event callback fired when this button is clicked. Includes the 'key' key in its event
    // payload to let the clicker know what was clicked inside their callback.
    onKeyButtonClick: _propTypes["default"].func
  },
  styles: {
    css: _InputModule["default"],
    className: 'key'
  },
  handlers: {
    onClick: (0, _handle.handle)((0, _handle.forward)('onClick'), (0, _handle.forwardCustom)('onKeyButtonClick', function (ev, _ref) {
      var key = _ref.children;
      return {
        key: key
      };
    }))
  },
  render: function render(_ref2) {
    var children = _ref2.children,
      rest = _objectWithoutProperties(_ref2, _excluded);
    delete rest.onKeyButtonClick;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], _objectSpread(_objectSpread({}, rest), {}, {
      size: "large",
      icon: children
    }));
  }
});
var Keypad = (0, _kind["default"])({
  name: 'Keypad',
  propTypes: {
    disabled: _propTypes["default"].bool,
    onAdd: _propTypes["default"].func,
    onRemove: _propTypes["default"].func
  },
  styles: {
    css: _InputModule["default"],
    className: 'keypad'
  },
  render: function render(_ref3) {
    var disabled = _ref3.disabled,
      onAdd = _ref3.onAdd,
      onRemove = _ref3.onRemove,
      rest = _objectWithoutProperties(_ref3, _excluded2);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Layout["default"], _objectSpread(_objectSpread({
      align: "center end",
      wrap: true
    }, rest), {}, {
      inline: true,
      children: KEY_LIST.map(function (keyText, rowIndex) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Layout.Cell, {
          className: rowIndex === 0 ? _SpotlightContainerDecorator.spotlightDefaultClass : null,
          "aria-label": keyText === 'backspace' ? (0, _$L["default"])('backspace') : keyText,
          shrink: true,
          component: Key,
          disabled: disabled,
          onKeyButtonClick: keyText === 'backspace' ? onRemove : onAdd,
          children: keyText
        }, "key".concat(rowIndex, "-").concat(keyText));
      })
    }));
  }
});

// Setup a keypress handler for window that monitors each of the number keys and the backspace key
var handleWindowKeyPress = (0, _handle.handle)((0, _handle.oneOf)([(0, _handle.forKey)('number'), (0, _handle.forward)('onAdd')], [(0, _handle.forKey)('backspace'), (0, _handle.forward)('onRemove')]));
var _default = exports["default"] = (0, _WindowEventable["default"])({
  onKeyDown: handleWindowKeyPress
}, Keypad);