"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
exports.useI18n = useI18n;
var _useClass = _interopRequireDefault(require("@enact/core/useClass"));
var _react = require("react");
var _index = _interopRequireDefault(require("../src/index.js"));
var _I18n = _interopRequireDefault(require("./I18n"));
var _excluded = ["locale"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/**
 * Configuration for `useI18n`
 *
 * @typedef {Object} useI18nConfig
 * @memberof i18n/I18nDecorator
 * @property {String[]}   [latinLanguageOverrides]    Locales that should be treated as latin
 * @property {String[]}   [nonLatinLanguageOverrides] Locales that should be treated as non-latin
 * @property {Function}   [onLoadResources]           Called when resources have been loaded after a
 *                                                    locale change
 * @property {Function[]} [resources]                 Additional resource callbacks to be invoked
 *                                                    during a locale change
 * @property {Boolean}    [sync = false]              Load the resources synchronously
 * @private
 */

/**
 * Object returned by `useI18n`
 *
 * @typedef {Object} useI18nInterface
 * @property {String}  className CSS classes that should be applied to the root node
 * @property {Boolean} loaded    Indicates if resources have been loaded
 * @property {String}  locale    Current locale
 * @property {Boolean} rtl       Indicates the current locale uses right-to-left text direction
 * @private
 */

/**
 * Adds internationalization support
 *
 * @param {useI18nConfig} config Configuration options
 * @returns {useI18nInterface}
 * @private
 */
function useI18n() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    locale = _ref.locale,
    config = _objectWithoutProperties(_ref, _excluded);
  var ilibLocale = _index["default"].getLocale();
  locale = locale && locale !== ilibLocale ? locale : ilibLocale;
  var _useState = (0, _react.useState)({
      locale: locale,
      loaded: Boolean(config.sync)
    }),
    _useState2 = _slicedToArray(_useState, 2),
    state = _useState2[0],
    setState = _useState2[1];
  var i18n = (0, _useClass["default"])(_I18n["default"], config);
  i18n.setContext(locale, setState);

  // Add/remove listeners on mount/unmount
  (0, _react.useEffect)(function () {
    i18n.load();
    return function () {
      return i18n.unload();
    };
  }, [i18n]);
  return _objectSpread(_objectSpread({}, state), {}, {
    updateLocale: i18n.updateLocale
  });
}
var _default = exports["default"] = useI18n;